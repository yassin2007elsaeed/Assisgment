// <auto-generated />
using System;
using Assisgment.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assisgment.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Assisgment.Model.Coach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExperinceYears")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specilzation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Coachs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExperinceYears = 3,
                            Name = "Yassin",
                            Specilzation = "sports"
                        },
                        new
                        {
                            Id = 2,
                            ExperinceYears = 2,
                            Name = "omar",
                            Specilzation = "football"
                        },
                        new
                        {
                            Id = 3,
                            ExperinceYears = 5,
                            Name = "Joo",
                            Specilzation = "Basket"
                        },
                        new
                        {
                            Id = 4,
                            ExperinceYears = 10,
                            Name = "ahmed",
                            Specilzation = "football"
                        });
                });

            modelBuilder.Entity("Assisgment.Model.Competition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tiitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Competions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Amireca",
                            Tiitle = "Copa"
                        },
                        new
                        {
                            Id = 2,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Asia",
                            Tiitle = "World cup"
                        },
                        new
                        {
                            Id = 3,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Arica",
                            Tiitle = "Euro"
                        });
                });

            modelBuilder.Entity("Assisgment.Model.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 29,
                            FullName = "Zizo",
                            Position = "Attack",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            Age = 30,
                            FullName = "BenSharki",
                            Position = "Attack",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 3,
                            Age = 32,
                            FullName = "Elgezeri",
                            Position = "Attack",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 4,
                            Age = 18,
                            FullName = "Koka",
                            Position = "Defend",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 5,
                            Age = 35,
                            FullName = "3wad",
                            Position = "GoalKeper",
                            TeamId = 2
                        });
                });

            modelBuilder.Entity("Assisgment.Model.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CoachId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CoachId")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Cairo",
                            CoachId = 1,
                            Name = "Alahly"
                        },
                        new
                        {
                            Id = 2,
                            City = "Giza",
                            CoachId = 2,
                            Name = "Elzamalek"
                        },
                        new
                        {
                            Id = 3,
                            City = "Cairo",
                            CoachId = 3,
                            Name = "Zed"
                        },
                        new
                        {
                            Id = 4,
                            City = "Alex",
                            CoachId = 4,
                            Name = "Smouha"
                        });
                });

            modelBuilder.Entity("CompetitionTeam", b =>
                {
                    b.Property<int>("CompetitionsId")
                        .HasColumnType("int");

                    b.Property<int>("TeamsId")
                        .HasColumnType("int");

                    b.HasKey("CompetitionsId", "TeamsId");

                    b.HasIndex("TeamsId");

                    b.ToTable("CompetitionTeam");
                });

            modelBuilder.Entity("Assisgment.Model.Player", b =>
                {
                    b.HasOne("Assisgment.Model.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Assisgment.Model.Team", b =>
                {
                    b.HasOne("Assisgment.Model.Coach", "Coach")
                        .WithOne("Team")
                        .HasForeignKey("Assisgment.Model.Team", "CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("CompetitionTeam", b =>
                {
                    b.HasOne("Assisgment.Model.Competition", null)
                        .WithMany()
                        .HasForeignKey("CompetitionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assisgment.Model.Team", null)
                        .WithMany()
                        .HasForeignKey("TeamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Assisgment.Model.Coach", b =>
                {
                    b.Navigation("Team")
                        .IsRequired();
                });

            modelBuilder.Entity("Assisgment.Model.Team", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
